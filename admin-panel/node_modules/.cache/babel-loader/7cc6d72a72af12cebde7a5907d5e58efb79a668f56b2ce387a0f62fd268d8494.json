{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vedan\\\\OneDrive\\\\Documents\\\\React JS\\\\ecommerce\\\\admin-panel\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  // Static admin credentials\n  const ADMIN_CREDENTIALS = {\n    email: 'admin@admin.com',\n    password: 'admin123'\n  };\n  useEffect(() => {\n    const token = localStorage.getItem('adminToken');\n    if (token) {\n      setIsAuthenticated(true);\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    try {\n      if (email === ADMIN_CREDENTIALS.email && password === ADMIN_CREDENTIALS.password) {\n        localStorage.setItem('adminToken', 'dummy-token');\n        setIsAuthenticated(true);\n        return {\n          success: true\n        };\n      }\n      return {\n        success: false,\n        message: 'Invalid credentials'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: 'Login failed'\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('adminToken');\n    setIsAuthenticated(false);\n  };\n  const value = {\n    isAuthenticated,\n    loading,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"Ax+B/BOELR06clzL32vENhaokmk=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","isAuthenticated","setIsAuthenticated","loading","setLoading","ADMIN_CREDENTIALS","email","password","token","localStorage","getItem","login","setItem","success","message","error","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/vedan/OneDrive/Documents/React JS/ecommerce/admin-panel/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Static admin credentials\r\n  const ADMIN_CREDENTIALS = {\r\n    email: 'admin@admin.com',\r\n    password: 'admin123'\r\n  };\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('adminToken');\r\n    if (token) {\r\n      setIsAuthenticated(true);\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      if (email === ADMIN_CREDENTIALS.email && password === ADMIN_CREDENTIALS.password) {\r\n        localStorage.setItem('adminToken', 'dummy-token');\r\n        setIsAuthenticated(true);\r\n        return { success: true };\r\n      }\r\n      return { success: false, message: 'Invalid credentials' };\r\n    } catch (error) {\r\n      return { success: false, message: 'Login failed' };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('adminToken');\r\n    setIsAuthenticated(false);\r\n  };\r\n\r\n  const value = {\r\n    isAuthenticated,\r\n    loading,\r\n    login,\r\n    logout\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMP,UAAU,CAACK,WAAW,CAAC;AAAA;AAACE,EAAA,CAAxCD,OAAO;AAEpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAMc,iBAAiB,GAAG;IACxBC,KAAK,EAAE,iBAAiB;IACxBC,QAAQ,EAAE;EACZ,CAAC;EAEDf,SAAS,CAAC,MAAM;IACd,MAAMgB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAChD,IAAIF,KAAK,EAAE;MACTN,kBAAkB,CAAC,IAAI,CAAC;IAC1B;IACAE,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,KAAK,GAAG,MAAAA,CAAOL,KAAK,EAAEC,QAAQ,KAAK;IACvC,IAAI;MACF,IAAID,KAAK,KAAKD,iBAAiB,CAACC,KAAK,IAAIC,QAAQ,KAAKF,iBAAiB,CAACE,QAAQ,EAAE;QAChFE,YAAY,CAACG,OAAO,CAAC,YAAY,EAAE,aAAa,CAAC;QACjDV,kBAAkB,CAAC,IAAI,CAAC;QACxB,OAAO;UAAEW,OAAO,EAAE;QAAK,CAAC;MAC1B;MACA,OAAO;QAAEA,OAAO,EAAE,KAAK;QAAEC,OAAO,EAAE;MAAsB,CAAC;IAC3D,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,OAAO;QAAEF,OAAO,EAAE,KAAK;QAAEC,OAAO,EAAE;MAAe,CAAC;IACpD;EACF,CAAC;EAED,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnBP,YAAY,CAACQ,UAAU,CAAC,YAAY,CAAC;IACrCf,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC;EAED,MAAMgB,KAAK,GAAG;IACZjB,eAAe;IACfE,OAAO;IACPQ,KAAK;IACLK;EACF,CAAC;EAED,oBACEtB,OAAA,CAACC,WAAW,CAACwB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAnB,QAAA,EAChC,CAACI,OAAO,IAAIJ;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAE3B,CAAC;AAACvB,GAAA,CAhDWF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}